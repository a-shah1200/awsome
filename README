awsome
======


steps to deploy
- VPC: create MY-VPC (10.0.0.0/16)
- Subnet: Private-1(10.0.0.0/24) Private-2(10.0.2.0/24) Public-1(10.0.3.0/24). Location:  P2(south-a), P1(south-b) IMP: two different Location. 
- Route Table: Public-RT, Private-RT
- Internet Gateway(igw): attach it to MY-VPC.

- Public Route Table -> edit routes -> add internet gateway, dest(0.0.0.0/0)
- Public Route Table -> edit subnet association -> add public-subnet
- Private Route Table -> edit subnet association -> add ptivate-subnet-1 & 2.


- EC2: Public-EC2 (Ubuntu Server 18.04 LTS (HVM), SSD Volume Type) -> MY-VPC -> Public Subnet -> Enable -> HTTP & HTTPS & SSH (Any).
- EC2: Private-EC2 (Ubuntu Server 18.04 LTS (HVM), SSD Volume Type) -> MY-VPC -> Private Subnet-1  -> Disable -> SSH .


- Subnet Group: DB-SUB , MY-VPC, Private-Subnet-2(10.0.2.0/24), Private-1(10.0.0.0/24)
- RDS: Database : MY-VPC, DB-SUB, No,  
- <Database_name>-> security group -> inbound rules -> edit -> MYSQL/Aurora;Protocol:TCP;Range:3306;Source:0.0.0.0/0.

- mysql -h database-1.cnxvayuv7sjy.ap-northeast-2.rds.amazonaws.com   -P 3306 -u admin -p


- ssh into Public-ec2
- sudo su -
- sudo apt-get update && sudo apt-get dist-upgrade
- sudo apt update
- sudo apt install python3 python3-pip 
- sudo apt-get install mysql-server
- exit
- mysql -h database-1.cnxvayuv7sjy.ap-northeast-2.rds.amazonaws.com   -P 3306 -u admin -p
- exit
- git clone https://github.com/karthikeyanrathore/AWSome
- sudo apt install python3.8-venv
- python3 -m venv vnv
- . vnv/bin/activate
- pip install PyMySQL
- sudo pip3 install pymysql
- pip3 install flask
- sudo apt-get install python3-opencv (NOT  REQ)
-  pip3 install opencv-python

- mysql -h database-1.cnxvayuv7sjy.ap-northeast-2.rds.amazonaws.com   -P 3306 -u admin -p
- source build/schema.sql

mysql -h database-1.cnxvayuv7sjy.ap-northeast-2.rds.amazonaws.com -P 3306 -u admin -p

Ubuntu-18.04
- sudo apt-get update && sudo apt-get dist-upgrade
- sudo apt install python3 
- sudo apt install software-properties-common
- sudo add-apt-repository ppa:deadsnakes/ppa
- sudo apt-get install python3.8
- sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
- sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2
- sudo update-alternatives --config python3
- sudo apt install python python3-pip
- pip3 install --upgrade pip
- pip3 install --no-cache-dir tensorflow
- python3 -c "import tensorflow as tf; print(tf.reduce_sum(tf.random.normal([1000, 1000])))"
- sudo update-alternatives --config python3
- sudo apt autoremove python3
- sudo apt install python python3-pip
- sudo su -
- - sudo apt install python python3-pip
- check opencv installed?

- make changes config file for database
- sudo ./run.sh

- sudo apt-get install python3.8-dev (You Might Req)
- sudo apt-get install ffmpeg libsm6 libxext6  -y (VERY IMPORTANT FOR OPEN CV) (INCASE OF ERROR) 


MIGHT REQ.
flask run --host=0.0.0.0 --port=80

https://www.itsupportwale.com/blog/how-to-upgrade-to-python-3-9-0-on-ubuntu-18-04-lts/
- pip3 install Cython
sudo apt-get install python3.7-dev



FINAL
- sudo yum install mysql-server

- sudo pip3 install --no-cache-dir  tensorflow
https://blog.devgenius.io/host-your-python-flask-on-aws-ec2-91735aa7127a


Ubunt-18

pip3 install --upgrade pip
pip3 install --no-cache-dir tensorflow



 FIRST CHECK IF TENSORFLOW IS INSTALLING OR NOT
if EC2 == Amazon Linux 2 AMI (HVM), SSD Volume Type :
  pip install --no-cache-dir tensorflow
if EC2 == Ubuntu Server 20.04 LTS (HVM):
  Not Working







